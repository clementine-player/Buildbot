apiVersion: v1
kind: Namespace
metadata:
  name: keel
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keel
  namespace: keel
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: keel-clusterrole-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keel-clusterrole
subjects:
  - kind: ServiceAccount
    name: keel
    namespace: keel
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: keel-clusterrole
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
      - extensions
      - apps
    resources:
      - pods
      - replicasets
      - replicationcontrollers
      - statefulsets
      - deployments
      - daemonsets
      - jobs
    verbs:
      - get
      - delete # required to delete pods during force upgrade of the same tag
      - watch
      - list
      - update
  - apiGroups:
      - ""      
    resources:
      - configmaps
    verbs:
      - get
      - create
      - update
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: keel
  namespace: keel
  labels:
      name: "keel"
spec:
  replicas: 1
  template:
    metadata:
      name: keel
      labels:
        app: keel
    spec:
      serviceAccountName: keel
      containers:
        - image: karolisr/keel:0.5.3
          imagePullPolicy: Always
          env:
            - name: DEBUG
              value: "1"
            - name: POLL
              value: "0"
            - name: PUBSUB
              value: "1"
            - name: PROJECT_ID
              value: "clementine-data"
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/etc/secrets/key.json"
          name: keel
          command: ["/bin/keel"]
          ports:
            - containerPort: 9300
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9300
            initialDelaySeconds: 30
            timeoutSeconds: 10
          volumeMounts:
          - name: secrets
            mountPath: /etc/secrets
            readOnly: true
      volumes:
        - name: secrets
          secret:
            secretName: pubsub-key
